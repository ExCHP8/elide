{
  "lambdaCapturingTypes": [],
  "types": [
    {
      "name": "byte[]"
    },
    {
      "name": "elide.tool.ssg.SSGCompilerError"
    },
    {
      "name": "elide.tool.ssg.SSGCompilerError$Generic"
    },
    {
      "name": "io.micronaut.context.exceptions.BeanContextException"
    },
    {
      "name": "io.micronaut.context.exceptions.BeanCreationException"
    },
    {
      "name": "io.micronaut.context.exceptions.BeanInstantiationException"
    },
    {
      "name": "io.micronaut.runtime.exceptions.ApplicationStartupException"
    },
    {
      "name": "java.io.IOException"
    },
    {
      "name": "java.io.NotSerializableException"
    },
    {
      "name": "java.io.ObjectStreamException"
    },
    {
      "name": "java.lang.AssertionError"
    },
    {
      "name": "java.lang.ClassNotFoundException"
    },
    {
      "name": "java.lang.Enum"
    },
    {
      "name": "java.lang.Error"
    },
    {
      "name": "java.lang.Exception"
    },
    {
      "name": "java.lang.LinkageError"
    },
    {
      "name": "java.lang.NoClassDefFoundError"
    },
    {
      "name": "java.lang.Object[]"
    },
    {
      "name": "java.lang.ReflectiveOperationException"
    },
    {
      "name": "java.lang.RuntimeException"
    },
    {
      "name": "java.lang.StackTraceElement"
    },
    {
      "name": "java.lang.StackTraceElement[]"
    },
    {
      "name": "java.lang.String"
    },
    {
      "name": "java.lang.Throwable"
    },
    {
      "name": "java.net.BindException"
    },
    {
      "name": "java.net.SocketException"
    },
    {
      "name": "java.util.ArrayList"
    },
    {
      "name": "java.util.Collections$EmptyList"
    },
    {
      "name": "java.util.Collections$SingletonList"
    },
    {
      "name": "java.util.HashSet"
    },
    {
      "name": "java.util.LinkedHashSet"
    },
    {
      "name": "java.util.concurrent.ArrayBlockingQueue"
    },
    {
      "name": "java.util.concurrent.locks.AbstractOwnableSynchronizer"
    },
    {
      "name": "java.util.concurrent.locks.AbstractQueuedSynchronizer"
    },
    {
      "name": "java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject"
    },
    {
      "name": "java.util.concurrent.locks.ReentrantLock"
    },
    {
      "name": "java.util.concurrent.locks.ReentrantLock$NonfairSync"
    },
    {
      "name": "java.util.concurrent.locks.ReentrantLock$Sync"
    },
    {
      "name": "org.opentest4j.AssertionFailedError"
    }
  ],
  "proxies": []
}
