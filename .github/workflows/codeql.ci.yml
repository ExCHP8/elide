name: "CodeQL"

on:
  push:
    branches: [ "v3" ]
  pull_request:
    branches: [ "v3" ]
  schedule:
    - cron: '17 14 * * 3'

jobs:
  analyze:
    name: Analyze
    runs-on: ubuntu-latest
    continue-on-error: true
    permissions:
      actions: read
      contents: read
      security-events: write
    strategy:
      fail-fast: false
      matrix:
        language: [ 'javascript', 'typescript' ]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      ## Setup: Java
      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '11'

      ## Setup: GraalVM
      - uses: DeLaGuardo/setup-graalvm@5.0
        with:
          graalvm: '21.0.0.2'
          java: 'java11'
          arch: 'amd64'

      # Initializes the CodeQL tools for scanning.
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: ${{ matrix.language }}

      ## Prep: Download Caches
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            ./node_modules
            ./build
            ./*/build
            ./*/*/build
          key: elide-${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}-yarn-${{ hashFiles('**/*.yarn.lock') }}
          restore-keys: |
            elide-${{ runner.os }}
            elide-

      ## CI: Re-Build
      - name: "üõ†Ô∏è Build"
        uses: gradle/gradle-build-action@v2
        env:
          CI: true
        with:
          arguments: |
            build
            -Pelide.ci=true
            -PbuildSamples=false
            -x nativeCompile
            -x test

      ## Code QL: Perform analysis
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2
